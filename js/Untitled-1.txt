

*******************
var command = process.argv[2];

var name = process.argv[3];


switch (command) {
    case "spotify-this-song":
        getSpotify();
        break;

    case "movie-this":
        movieThis();
        break;

    case "do-what-it-says":
        doWHatItSays();
        break;

    default:
        console.log('LIRI does not know that');
}


function getSpotify() {

    var spotify = new Spotify({
        id: keys.spotify.id,
        secret: keys.spotify.secret
    });

    var songName = name;

    if (!songName) {
        songName = "The Sign";
    }

    var trackName = songName;

    spotify.search({ type: 'track', query: trackName }, function (err, data) {
        if (err) {
            return console.log("Error " + err);
        } else {
            var songs = data.tracks.items;
            for (var i = 0; i < songs.length; i++) {
                console.log(i);
                console.log('artist(s): ' + songs[i].artists.map(getArtistsName));
                console.log('song name: ' + songs[i].name);
                console.log('preview song' + songs[i].preview_url);
                console.log('album: ' + songs[i].album.name);
                console.log('*******************************************************');
            }
        }
    });
}


function movieThis() {

    var omdb = keys.omdbKey.key;

    var movieName = name;

    if (!movieName) {
        movieName = "mr nobody";
    }


    var titleName = movieName;

    request("http://www.omdbapi.com/?t=" + movieName + "&y=&plot=short&apikey=" + omdb, function (error, response, body) {
        if (!error && response.statusCode == 200) {
            var jsonData = JSON.parse(body);

            var output =
                console.log('Title: ' + jsonData.Title);
            console.log('Year: ' + jsonData.Year);
            console.log('Rated: ' + jsonData.Rated);
            console.log('IMDB Rating: ' + jsonData.imdbRating);
            console.log('Country: ' + jsonData.Country);
            console.log('Language: ' + jsonData.Language);
            console.log('Plot: ' + jsonData.Plot);
            console.log('Actors: ' + jsonData.Actors);
            console.log('Rotten Tomato Rating: ' + jsonData.tomatoRating);
            console.log('Rotten Tomato URL: ' + jsonData.tomatoURL);

            console.log(output);
        } else {
            console.log('error: ', error);
            return;
        }
    });
}


function doWHatItSays() {
    fs.readFile('random.txt', 'utf8', function (error, data) {
        if(!error) {

            var dataArr = data.split(',');

            var randomCommand = dataArr[0];
            var randomName = dataArr[1];

            switch (randomCommand) {

                case "spotify-this-song":
                    command = randomCommand;
                    getSpotify();
                    break;

                case "movie-this":
                    name = randomName;
                    movieThis();
                    break;

                default: console.log("that is not a valid command");
            }
        } else {
            throw error;
        }
    });
}
    

